<?php

/**
 * @file
 * Install file for the Simple Content Type module
 */

/**
 * Implements hook_uninstall().
 */
function osa_uninstall() {
  // gather all the content created while the module was enabled
  $result = db_select('node', 'n')
      ->fields('n', array('nid'))
      ->condition("n.type", 'osa')
      ->execute();

  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // delete all the nodes at once
  node_delete_multiple($nids);
  // delete our content type
  node_type_delete('osa');
  // purge all field information
  field_purge_batch(1000);

  // get rid of any tables we created
  $sql = 'DROP TABLE IF EXISTS osa_affaire, osa_client, osa_etudiant';
  $result = db_query($sql);
}

/**
 * Implements hook_schema().
 */
function osa_schema() {
  // table schema to track example data
  $schema['osa_affaire'] = array(
    'description' => 'Table contenant les informations relatives aux affaires',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid of the node being created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {user}.uid of the user this node belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'idAffaire' => array(
        'description' => 'ID de la nouvelle affaire',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'idClient' => array(
        'description' => 'ID du client de la nouvelle affaire',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'titreAffaire' => array(
        'description' => 'Titre de la nouvelle affaire',
        'type' => 'varchar',
        'length' => 250,
        'not null' => TRUE,
      ),
      'recapitulatif' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'prixHT' => array(
        'description' => 'Prix hors taxes',
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'tva' => array(
        'description' => 'Pourcentage de TVA',
        'type' => 'float',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'sommeFrais' => array(
        'description' => 'Somme des frais connexes liés à l\'affaire',
        'type' => 'float',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'nbJEH' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'int',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'prixJEH' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'float',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'pourcentPrevi' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'float',
        'size' => 'medium',
        'not null' => FALSE,
      ),
      'sommeHTPrevi' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'float',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'accompte' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'float',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'soldeFinal' => array(
        'description' => 'Notes particulières à propos de l\'affaire',
        'type' => 'float',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'dateDebut' => array(
        'description' => 'Date de début de l\'affaire',
        'mysql_type' => 'datetime', // The equivalent MySQL data type
        'pgsql_type' => 'timestamp', // The equivalent PostgreSQL data type
        'not null' => TRUE,
      ),
      'dateFin' => array(
        'description' => 'Date de fin de l\'affaire',
        'mysql_type' => 'datetime', // The equivalent MySQL data type
        'pgsql_type' => 'timestamp', // The equivalent PostgreSQL data type
        'not null' => TRUE,
      ),
      'datePremierContact' => array(
        'description' => 'Date de premier contact avec le client',
        'mysql_type' => 'datetime', // The equivalent MySQL data type
        'pgsql_type' => 'timestamp', // The equivalent PostgreSQL data type
        'not null' => FALSE,
      ),
      'origine' => array(
        'description' => 'Notes particulières à propos de l\'obtention l\'affaire',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'chartreQualite' => array(
        'description' => 'Chartre Qualité de l\'affaire',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
    ),
    'index' => array('nid'),
    'primary key' => array('nid'),
    'unique keys' => array(
      'nid' => array('nid'),
      'idAffaire' => array('idAffaire'),
    ),
  );

  $schema['osa_client'] = array(
    'description' => 'Table contenant les clients',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid of the node being created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Le {user}.uid de l\'utilisateur qui a rentré le client',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'idClient' => array(
        'description' => 'ID du nouveau client',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'nomClient' => array(
        'description' => 'Nom de famille du client',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'prenomClient' => array(
        'description' => 'Prenom du client',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'fonction' => array(
        'description' => 'Fonction du client dans son entreprise',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'entreprise' => array(
        'description' => 'Entreprise du client',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'numeroDeVoie' => array(
        'description' => 'Numéro de la voie',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'voie' => array(
        'description' => 'voie',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
      'codePostal' => array(
        'description' => 'Code postal',
        'type' => 'varchar',
        'length' => 250, //Plus de 5 caractères pour laisser place aux "CEDEX" ...
        'not null' => FALSE,
      ),
      'ville' => array(
        'description' => 'Ville',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'mail' => array(
        'description' => 'Adresse email',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'tel' => array(
        'description' => 'Numéro de téléphone',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'commentaire' => array(
        'description' => 'Commentaire particulier à propos du client (période quand le joindre etc ...)',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
    ),
    'index' => array('idClient'),
    'primary key' => array('idClient'),
    'unique keys' => array(
      'idClient' => array('idClient'),
    ),
  );

  $schema['osa_etudiant'] = array(
    'description' => 'Table contenant les étudiants réalisateurs',
    'fields' => array(
      'uid' => array(
        'description' => 'Le {user}.uid de l\'utilisateur qui a rentré l\'étudiant',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'idEtudiant' => array(
        'description' => 'ID HEI (hxxxxx) de l\'étudiant',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'nomEtudiant' => array(
        'description' => 'Nom de famille de l\'étudiant',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'prenomEtudiant' => array(
        'description' => 'Prenom de l\'étudiant',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'insee' => array(
        'description' => 'INSEE de l\'étudiant',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'numeroDeVoie' => array(
        'description' => 'Numéro de la voie',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'voie' => array(
        'description' => 'voie',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ),
      'codePostal' => array(
        'description' => 'Code postal',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'ville' => array(
        'description' => 'Ville',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'mail' => array(
        'description' => 'Adresse email',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'tel' => array(
        'description' => 'Numéro de téléphone',
        'type' => 'varchar',
        'length' => 250,
        'not null' => FALSE,
      ),
      'dateInscription' => array(
        'description' => 'Date de l\'inscription de l\'étudiant',
        'mysql_type' => 'datetime', // The equivalent MySQL data type
        'pgsql_type' => 'timestamp', // The equivalent PostgreSQL data type
        'not null' => FALSE,
      ),
      'dateCotisation' => array(
        'description' => 'Date de l\'inscription de l\'étudiant',
        'mysql_type' => 'datetime', // The equivalent MySQL data type
        'pgsql_type' => 'timestamp', // The equivalent PostgreSQL data type
        'not null' => FALSE,
      ),
      'ficheAdhesionRemise' => array(
        'description' => 'Booleen, 1: True, 0: False',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'ficheMembreActifRemise' => array(
        'description' => 'Booleen, 1: True, 0: False',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'paiementCotisationEffectue' => array(
        'description' => 'Booleen, 1: True, 0: False',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'certificatScolariteRemis' => array(
        'description' => 'Booleen, 1: True, 0: False',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'attestationSecuSocialeRemise' => array(
        'description' => 'Booleen, 1: True, 0: False',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'photocopieCarteIdentiteRemise' => array(
        'description' => 'Booleen, 1: True, 0: False',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
    ),
    'index' => array('idEtudiant'),
    'primary key' => array('idEtudiant'),
    'unique keys' => array(
      'idEtudiant' => array('idEtudiant'),
      'insee' => array('insee'),
    ),
  );

  return $schema;
}