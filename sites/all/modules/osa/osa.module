<?php

/**
 * @file
 * This module provides a node type called 'Simple Content Type'
 */

/**
 * Fonction pour récupérer sous forme de tableau la date complète,
 * formatée correctement en FR, depuis un timestamp
 * indices 0 : jour en toute lettre, 1 : numéro du jour, 2 : mois, 3 : année
 * 
 * @date = timestamp
 */
function formatDateFR($timestamp) {
  $variable = array();
  $weekday_fr = array("dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi");
  $month_fr = Array("", "janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août",
    "septembre", "octobre", "novembre", "décembre");
  list($variable[0], $variable[1], $variable[2], $variable[3]) = explode('/', date("w/d/n/Y", $timestamp));

  // Passage d'un numéro à la correspondance en toute lettres.
  $variable[0] = $weekday_fr[$variable[0]];
  $variable[2] = $month_fr[$variable[2]];

  return $variable;
}

/**
 * Implements hook_node_info().
 */
function osa_node_info() {
  // define our content type info
  $items['osa_affaire'] = array(
    'name' => t('Affaire'),
    'type' => 'osa_affaire',
    'base' => 'osa_affaire',
    'description' => t('Une nouvelle affaire à enregistrer'),
    'has_title' => '1',
    'title_label' => t('Affaire - Système OSA'),
    'has_body' => FALSE,
    'help' => t('Veuillez renseigner tous les champs.'),
  );
  $items['osa_client'] = array(
    'name' => t('Client'),
    'type' => 'osa_client',
    'base' => 'osa_client',
    'description' => t('Un nouveau client à enregistrer'),
    'has_title' => '1',
    'title_label' => t('Client - Système OSA'),
    'has_body' => FALSE,
    'help' => t('Veuillez renseigner tous les champs.'),
  );


  return $items;
}

/* * ******************************************
 * 
 * Implémentations du type de contenu AFFAIRE
 * 
 * *******************************************
 */

/**
 * Implement hook_form() with the standard default form.
 */
function osa_affaire_form($node, &$form_state) {
  // get the default values for our form fields
  if (!isset($node->nid)) {

    $idAffaire = '';
    $idClient = '';
    $titreAffaire = '';
    $recapitulatif = '';
    $prixHT = 0;
    $tva = 19.6;
    $sommeFrais = 0;
    $nbJEH = 0;
    $prixJEH = 0;
    $pourcentPrevi = 0;
    $sommeHTPrevi = 0;
    $accompte = 0;
    $soldeFinal = 0;
    $dateDebut = '';
    $dateFin = '';
    $datePremierContact = '';
    $origine = '';
    $chartreQualite = '';
  }
  else {
    // query the db for info about our node
    $data = db_select('osa_affaire', 'd')
        ->fields('d', array(
          'nid',
          'uid',
          'idAffaire',
          'idClient',
          'titreAffaire',
          'recapitulatif',
          'prixHT',
          'tva',
          'sommeFrais',
          'nbJEH',
          'prixJEH',
          'pourcentPrevi',
          'sommeHTPrevi',
          'accompte',
          'soldeFinal',
          'dateDebut',
          'dateFin',
          'datePremierContact',
          'origine',
          'chartreQualite',))
        ->condition("d.nid", $node->nid)
        ->execute()
        ->fetchAssoc();

    $idAffaire = $data['idAffaire'];
    $idClient = $data['idClient'];
    $titreAffaire = $data['titreAffaire'];
    $recapitulatif = $data['recapitulatif'];
    $prixHT = $data['prixHT'];
    $tva = $data['tva'];
    $sommeFrais = $data['sommeFrais'];
    $nbJEH = $data['nbJEH'];
    $prixJEH = $data['prixJEH'];
    $pourcentPrevi = $data['pourcentPrevi'];
    $sommeHTPrevi = $data['sommeHTPrevi'];
    $accompte = $data['accompte'];
    $soldeFinal = $data['soldeFinal'];
    $dateDebut = $data['dateDebut'];
    $dateFin = $data['dateFin'];
    $datePremierContact = $data['datePremierContact'];
    $origine = $data['origine'];
    $chartreQualite = $data['chartreQualite'];
  }
  // build the form
  $form = array();

  $form['idAffaire'] = array(
    '#title' => t('id de l\'affaire'),
    '#type' => 'textfield',
    '#description' => t('Indiquez l\' id de l\'affaire.'),
    '#default_value' => $idAffaire,
    '#weight' => -9,
    '#required' => TRUE,
  );
  $form['idClient'] = array(
    '#title' => t('id du client'),
    '#type' => 'textfield',
    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $idClient,
    '#weight' => -8,
    '#required' => TRUE,
  );
  $form['titreAffaire'] = array(
    '#title' => t('Titre de l\'affaire'),
    '#type' => 'textfield',
    '#description' => t('Indiquez le titre de l\'affaire.'),
    '#default_value' => $titreAffaire,
    '#weight' => -7,
    '#required' => TRUE,
  );
  $form['recapitulatif'] = array(
    '#title' => t('Récapitulatif de l\'affaire'),
    '#type' => 'textarea',
    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $recapitulatif,
    '#rows' => 5,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['prixHT'] = array(
    '#title' => t('Prix (HT)'),
    '#type' => 'textfield',
    '#description' => t('Renseignez le prix hors taxes de l\'affaire, en euros.'),
    '#default_value' => $prixHT,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['tva'] = array(
    '#title' => t('TVA'),
    '#type' => 'textfield',
    '#description' => t('Renseignez la TVA qui s\'appliquera sur l\'affaire.'),
    '#default_value' => $tva,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['sommeFrais'] = array(
    '#title' => t('Somme des frais annexes'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $sommeFrais,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['nbJEH'] = array(
    '#title' => t('Nombre de JEH'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $nbJEH,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['prixJEH'] = array(
    '#title' => t('Prix fixé d\'un seul JEH'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $prixJEH,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['pourcentPrevi'] = array(
    '#title' => t('Pourcentage prévisionnel reversé à l\'étudiant'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $pourcentPrevi,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['sommeHTPrevi'] = array(
    '#title' => t('Somme hors taxes prévisionnelle reversée à l\'étudiant'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $sommeHTPrevi,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['accompte'] = array(
    '#title' => t('Accompte déjà versé par l\'entreprise'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $accompte,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['soldeFinal'] = array(
    '#title' => t('Solde final'),
    '#type' => 'textfield',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $soldeFinal,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['dateDebut'] = array(
    '#title' => t('Date du début de l\'affaire'),
    '#type' => 'date',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $dateDebut,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['dateFin'] = array(
    '#title' => t('Date de fin de l\'affaire'),
    '#type' => 'date',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $dateFin,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['datePremierContact'] = array(
    '#title' => t('Date du premier contact avec le client'),
    '#type' => 'date',
    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $datePremierContact,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['origine'] = array(
    '#title' => t('Origine de l\'affaire'),
    '#type' => 'textarea',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $origine,
    '#rows' => 5,
    '#weight' => -6,
    '#required' => FALSE,
  );
  $form['chartreQualite'] = array(
    '#title' => t('Chartre qualité de l\'affaire'),
    '#type' => 'textarea',
//    '#description' => t('Renseignez le récapitulatif de l\'affaire.'),
    '#default_value' => $chartreQualite,
    '#rows' => 5,
    '#weight' => -6,
    '#required' => FALSE,
  );

  return $form;
}

/**
 * Implements hook_node_validate().
 */
function osa_node_validate($node, $form, &$form_state) {
  // if we're not validating one of our own get out of here
  if ($node->type == "osa_affaire") {
    
  }
  elseif ($node->type == 'osa_client') {
    
  }
  else {
    return;
  }
  // Check to see if email address is formatted correctly
//	if (isset($node->osa_textfield) && !valid_email_address($node->osa_textfield))  {
//		form_set_error('osa_textfield', t('Please enter a valid email address.'), NULL);
//	}
}

/**
 * Implement hook_node_insert()
 */
function osa_node_insert($node) {
  // if we're not inserting one of our own get out of here
  if ($node->type == 'osa_affaire') {
    global $user;
    $nid = $node->nid;
    $uid = $user->uid;

    // Passage des dates en TIMESTAMP pour ajout en BDD.
    // Pour cela, on instancie la classe DateTime en créant nos objets
    // dateDebut, Fin, PremierContact
    // On récupère ensuite une date correctement formaté à l'aide de l'array créé
    // par drupal. On applique à cet object la méthode getTimestamp pour retourner
    // ce qu'on l'on veut : un timestamp en bonne et due forme.


    $dateDebut = new DateTime;
    $dateFin = new DateTime;
    $datePremierContact = new DateTime;

    $dateDebut = date_date_set($dateDebut, $node->dateDebut['year'], $node->dateDebut['month'], $node->dateDebut['day']);
    $dateDebutTS = $dateDebut->getTimestamp();

    $dateFin = date_date_set($dateFin, $node->dateFin['year'], $node->dateFin['month'], $node->dateFin['day']);
    $dateFinTS = $dateFin->getTimestamp();

    $datePremierContact = date_date_set($datePremierContact, $node->datePremierContact['year'], $node->datePremierContact['month'], $node->datePremierContact['day']);
    $datePremierContactTS = $dateDebut->getTimestamp();


    $insert = db_insert('osa_affaire')
        ->fields(array(
          'nid' => $nid,
          'uid' => $uid,
          'idAffaire' => $node->idAffaire,
          'idClient' => $node->idClient,
          'titreAffaire' => $node->titreAffaire,
          'recapitulatif' => $node->recapitulatif,
          'prixHT' => $node->prixHT,
          'tva' => $node->tva,
          'sommeFrais' => $node->sommeFrais,
          'nbJEH' => $node->nbJEH,
          'prixJEH' => $node->prixJEH,
          'pourcentPrevi' => $node->pourcentPrevi,
          'sommeHTPrevi' => $node->sommeHTPrevi,
          'accompte' => $node->accompte,
          'soldeFinal' => $node->soldeFinal,
          'dateDebut' => $dateDebutTS,
          'dateFin' => $dateFinTS,
          'datePremierContact' => $datePremierContactTS,
          'origine' => $node->origine,
          'chartreQualite' => $node->chartreQualite,))
        ->execute();
  }
  elseif ($node->type == 'osa_client') {

    global $user;
    $nid = $node->nid;
    $uid = $user->uid;

    $insert = db_insert('osa_client')
        ->fields(array(
          'nid' => $nid,
          'uid' => $uid,
          'idClient' => $node->idClient,
          'nomClient' => $node->nomClient,
          'prenomClient' => $node->prenomClient,
          'fonction' => $node->fonction,
          'entreprise' => $node->entreprise,
          'numeroDeVoie' => $node->numeroDeVoie,
          'voie' => $node->voie,
          'codePostal' => $node->codePostal,
          'ville' => $node->ville,
          'mail' => $node->mail,
          'tel' => $node->tel,
          'commentaire' => $node->commentaire,
        ))
        ->execute();
  }
  else {
    return;
  }
}

/**
 * Implement hook_node_update()
 */
function osa_node_update($node) {
  // if we're not updating one of our own get out of here
  if ($node->type == "osa_affaire") {

    $update = db_update('osa_affaire')
        ->fields(array(
          'idAffaire' => $node->idAffaire,
          'idClient' => $node->idClient,
          'titreAffaire' => $node->titreAffaire,
          'recapitulatif' => $node->recapitulatif,
          'prixHT' => $node->prixHT,
          'tva' => $node->tva,
          'sommeFrais' => $node->sommeFrais,
          'nb' => $node->nbJEH,
          'prixJEH' => $node->prixJEH,
          'pourcentPrevi' => $node->pourcentPrevi,
          'sommeHTPrevi' => $node->sommeHTPrevi,
          'accompte' => $node->accompte,
          'soldeFinal' => $node->soldeFinal,
          'dateDebut' => $node->dateDebut,
          'dateFin' => $node->dateFin,
          'datePremierContact' => $node->datePremierContact,
          'origine' => $node->origine,
          'chatreQualite' => $node->chartreQualite,))
        ->condition('nid', $node->nid, '=')
        ->execute();
  }
  elseif ($node->type == "osa_client") {
    $update = db_update('osa_client')
        ->fields(array(
          'idClient' => $node->idClient,
          'nomClient' => $node->nomClient,
          'prenomClient' => $node->prenomClient,
          'fonction' => $node->fonction,
          'entreprise' => $node->entreprise,
          'numeroDeVoie' => $node->numeroDeVoie,
          'voie' => $node->voie,
          'codePostal' => $node->codePostal,
          'ville' => $node->ville,
          'mail' => $node->mail,
          'tel' => $node->tel,
          'commentaire' => $node->commentaire,
        ))
        ->condition('nid', $node->nid, '=')
        ->execute();
  }
}

/**
 * Implements hook_node_view().
 */
function osa_node_view($node, $view_mode, $langcode) {

  if (($node->type == 'osa_affaire')) {
    // get the data we want to display
    $data = db_select('osa_affaire', 'd')
        ->fields('d', array(
          'uid',
          'idAffaire',
          'idClient',
          'titreAffaire',
          'recapitulatif',
          'prixHT',
          'tva',
          'sommeFrais',
          'nbJEH',
          'prixJEH',
          'pourcentPrevi',
          'sommeHTPrevi',
          'accompte',
          'soldeFinal',
          'dateDebut',
          'dateFin',
          'datePremierContact',
          'origine',
          'chartreQualite',))
        ->condition("d.nid", $node->nid)
        ->execute()
        ->fetchAssoc();
    // fetch the user's name using {osa_data}.uid
    $user_name = db_select('users', 'u')
        ->fields('u', array('name'))
        ->condition("u.uid", $data['uid'])
        ->execute()
        ->fetchField();

    $idAffaire = $data['idAffaire'];
    $idClient = $data['idClient'];
    $titreAffaire = $data['titreAffaire'];
    $recapitulatif = $data['recapitulatif'];
    $prixHT = $data['prixHT'];
    $tva = $data['tva'];
    $sommeFrais = $data['sommeFrais'];
    $nbJEH = $data['nbJEH'];
    $prixJEH = $data['prixJEH'];
    $pourcentPrevi = $data['pourcentPrevi'];
    $sommeHTPrevi = $data['sommeHTPrevi'];
    $accompte = $data['accompte'];
    $soldeFinal = $data['soldeFinal'];
    $dateDebut = $data['dateDebut'];
    $dateFin = $data['dateFin'];
    $datePremierContact = $data['datePremierContact'];
    $origine = $data['origine'];
    $chartreQualite = $data['chartreQualite'];


    $dateDebutFormat = formatDateFR($dateDebut);
    $dateFinFormat = formatDateFR($dateFin);
    $datePremierContactFormat = formatDateFR($datePremierContact);

    // add what we want to the node content area
    $node->content['intro'] = array(
      '#markup' => '<p>This node was created by user ' . $user_name . '. Thanks for your contribution.</p>',
      '#weight' => -10,
    );
    $node->content['idAffaire'] = array(
      '#markup' => '<p><strong>ID de l\'affaire : ' . $idAffaire . '</strong></p>'
    );
    $node->content['email'] = array(
      '#markup' => '<p><strong>Example Email:</strong> ' . $idClient . '</p>',
      '#weight' => -9,
    );
    $node->content['plain_text'] = array(
      '#markup' => '<p><strong>The plain text:</strong> ' . $titreAffaire . '
                  avec pour date ' . $dateDebutFormat[0] . $dateDebutFormat[1] . $dateDebutFormat[2] . '</p>',
      '#weight' => -8,
    );
  }
  elseif ($node->type == 'osa_client') {
    $data = db_select('osa_client', 'c')
        ->fields('c', array(
          'uid',
          'idClient',
          'nomClient',
          'prenomClient',
          'fonction',
          'entreprise',
          'numeroDeVoie',
          'voie',
          'codePostal',
          'ville',
          'mail',
          'tel',
          'commentaire',))
        ->condition("c.nid", $node->nid)
        ->execute()
        ->fetchAssoc();
    // fetch the user's name using {osa_data}.uid
    $user_name = db_select('users', 'u')
        ->fields('u', array('name'))
        ->condition("u.uid", $data['uid'])
        ->execute()
        ->fetchField();

    $idClient = $data['idClient'];
    $nomClient = $data['nomClient'];
    $prenomClient = $data['prenomClient'];
    $fonction = $data['fonction'];
    $entreprise = $data['entreprise'];
    $numeroDeVoie = $data['numeroDeVoie'];
    $voie = $data['voie'];
    $codePostal = $data['codePostal'];
    $ville = $data['ville'];
    $mail = $data['mail'];
    $tel = $data['tel'];
    $commentaire = $data['commentaire'];

    // add what we want to the node content area
    $node->content['intro'] = array(
      '#markup' => '<p>This node was created by user ' . $user_name . ' pour le client ' . $idClient .
      ', de l\'entreprise ' . $entreprise . '</p>',
      '#weight' => -10,
    );
    $node->content['idAffaire'] = array(
      '#markup' => '<p><strong>Contact : ' . $nomClient . ' ' . $prenomClient . '</strong></p>'
    );
    $node->content['email'] = array(
      '#markup' => '<p><strong>Example Email:</strong> ' . $mail . '</p>',
      '#weight' => -9,
    );
    $node->content['plain_text'] = array(
      '#markup' => '<p><strong>The plain text:</strong> ' . $commentaire . '</p>',
      '#weight' => -8,
    );
  }
  else {
    return;
  }
}

/* * ******************************************
 * 
 * Implémentations du type de contenu CLIENT
 * 
 * *******************************************
 */

/**
 * Implement hook_form() with the standard default form.
 */
function osa_client_form($node, &$form_state) {
  // get the default values for our form fields
  if (!isset($node->nid)) {

    $idClient = '';
    $nomClient = '';
    $prenomClient = '';
    $fonction = '';
    $entreprise = '';
    $numeroDeVoie = 1;
    $voie = '';
    $codePostal = '';
    $ville = '';
    $mail = '';
    $tel = '';
    $commentaire = '';
  }
  else {
    // query the db for info about our node
    $data = db_select('osa_client', 'c')
        ->fields('c', array(
          'nid',
          'uid',
          'idClient',
          'nomClient',
          'prenomClient',
          'fonction',
          'entreprise',
          'numeroDeVoie',
          'voie',
          'codePostal',
          'ville',
          'mail',
          'tel',
          'commentaire',))
        ->condition("c.nid", $node->nid)
        ->execute()
        ->fetchAssoc();

    $idClient = $data['idClient'];
    $nomClient = $data['nomClient'];
    $prenomClient = $data['prenomClient'];
    $fonction = $data['fonction'];
    $entreprise = $data['entreprise'];
    $numeroDeVoie = $data['numeroDeVoie'];
    $voie = $data['voie'];
    $codePostal = $data['codePostal'];
    $ville = $data['ville'];
    $mail = $data['mail'];
    $tel = $data['tel'];
    $commentaire = $data['commentaire'];
  }
  // build the form
  $form = array();

  $form['idClient'] = array(
    '#title' => t('id du client'),
    '#type' => 'textfield',
    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $idClient,
    '#weight' => -10,
    '#required' => TRUE,
  );
  $form['nomClient'] = array(
    '#title' => t('Nom de famille'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $nomClient,
    '#weight' => -9,
    '#required' => FALSE,
  );
  $form['prenomClient'] = array(
    '#title' => t('Prénom'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $prenomClient,
    '#weight' => -8,
    '#required' => FALSE,
  );
  $form['fonction'] = array(
    '#title' => t('Fonction au sein de l\'entreprise'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $fonction,
    '#weight' => -7,
    '#required' => FALSE,
  );
  $form['entreprise'] = array(
    '#title' => t('Entreprise du client'),
    '#type' => 'textfield',
    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $entreprise,
    '#weight' => -6,
    '#required' => TRUE,
  );
  $form['numeroDeVoie'] = array(
    '#title' => t('Numéro de voie'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $numeroDeVoie,
    '#weight' => -5,
    '#required' => FALSE,
  );
  $form['voie'] = array(
    '#title' => t('Voie'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $voie,
    '#weight' => -4,
    '#required' => FALSE,
  );
  $form['codePostal'] = array(
    '#title' => t('Code postal'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $codePostal,
    '#weight' => -3,
    '#required' => FALSE,
  );
  $form['ville'] = array(
    '#title' => t('Ville'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $ville,
    '#weight' => -2,
    '#required' => FALSE,
  );
  $form['mail'] = array(
    '#title' => t('Adresse email'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $mail,
    '#weight' => -1,
    '#required' => FALSE,
  );
  $form['tel'] = array(
    '#title' => t('Numéro de téléphone'),
    '#type' => 'textfield',
//    '#description' => t('Indiquez l\' id du client'),
    '#default_value' => $tel,
    '#weight' => 0,
    '#required' => FALSE,
  );
  $form['commentaire'] = array(
    '#title' => t('Commentaire'),
    '#type' => 'textarea',
    '#description' => t('Quand joindre le client, nom de l\'assistant(e) etc ... '),
    '#default_value' => $commentaire,
    '#weight' => 1,
    '#required' => FALSE,
  );
  return $form;
}

///**
// * Implements hook_node_validate().
// */
//function osa_client_node_validate($node, $form, &$form_state) {
//  // if we're not validating one of our own get out of here
//  if ($node->type != "osa_client") {
//    return;
//  }
//  // Check to see if email address is formatted correctly
////	if (isset($node->osa_textfield) && !valid_email_address($node->osa_textfield))  {
////		form_set_error('osa_textfield', t('Please enter a valid email address.'), NULL);
////	}
//}
//
///**
// * Implement hook_node_insert()
// */
//function osa_client_node_insert($node) {
//  // if we're not inserting one of our own get out of here
//  if ($node->type != "osa_client") {
//    return;
//  }
//  global $user;
//  $nid = $node->nid;
//  $uid = $user->uid;
//
//  $insert = db_insert('osa_client')
//      ->fields(array(
//        'nid' => $nid,
//        'uid' => $uid,
//        'idClient' => $node->idClient,
//        'nomClient' => $node->nomClient,
//        'prenomClient' => $node->prenomClient,
//        'fonction' => $node->fonction,
//        'entreprise' => $node->entreprise,
//        'numeroDeVoie' => $node->numeroDeVoie,
//        'voie' => $node->voie,
//        'codePostal' => $node->codePostal,
//        'ville' => $node->ville,
//        'mail' => $node->mail,
//        'tel' => $node->tel,
//        'commentaire' => $node->commentaire,
//      ))
//      ->execute();
//}
//
///**
// * Implement hook_node_update()
// */
//function osa_client_node_update($node) {
//  // if we're not updating one of our own get out of here
//  if ($node->type != "osa_client") {
//    return;
//  }
//
//  $update = db_update('osa_client')
//      ->fields(array(
//        'idClient' => $node->idClient,
//        'nomClient' => $node->nomClient,
//        'prenomClient' => $node->prenomClient,
//        'fonction' => $node->fonction,
//        'entreprise' => $node->entreprise,
//        'numeroDeVoie' => $node->numeroDeVoie,
//        'voie' => $node->voie,
//        'codePostal' => $node->codePostal,
//        'ville' => $node->ville,
//        'mail' => $node->mail,
//        'tel' => $node->tel,
//        'commentaire' => $node->commentaire,
//      ))
//      ->condition('nid', $node->nid, '=')
//      ->execute();
//}
//
///**
// * Implements hook_node_view().
// */
//function osa_client_node_view($node, $view_mode, $langcode) {
//  if ($node->type != 'osa_client') {
//    return;
//  }
//  // get the data we want to display
//  $data = db_select('osa_client', 'c')
//      ->fields('c', array(
//        'uid',
//        'idClient',
//        'nomClient',
//        'prenomClient',
//        'fonction',
//        'entreprise',
//        'numeroDeVoie',
//        'voie',
//        'codePostal',
//        'ville',
//        'mail',
//        'tel',
//        'commentaire',))
//      ->condition("c.nid", $node->nid)
//      ->execute()
//      ->fetchAssoc();
//  // fetch the user's name using {osa_data}.uid
//  $user_name = db_select('users', 'u')
//      ->fields('u', array('name'))
//      ->condition("u.uid", $data['uid'])
//      ->execute()
//      ->fetchField();
//
//  $idClient = $data['idClient'];
//  $nomClient = $data['nomClient'];
//  $prenomClient = $data['prenomClient'];
//  $fonction = $data['fonction'];
//  $entreprise = $data['entreprise'];
//  $numeroDeVoie = $data['numeroDeVoie'];
//  $voie = $data['voie'];
//  $codePostal = $data['codePostal'];
//  $ville = $data['ville'];
//  $mail = $data['mail'];
//  $tel = $data['tel'];
//  $commentaire = $data['commentaire'];
//
//  // add what we want to the node content area
//  $node->content['intro'] = array(
//    '#markup' => '<p>This node was created by user ' . $user_name . ' pour le client ' . $idClient .
//    ', de l\'entreprise ' . $entreprise . '</p>',
//    '#weight' => -10,
//  );
//  $node->content['idAffaire'] = array(
//    '#markup' => '<p><strong>Contact : ' . $nomClient . ' ' . $prenomClient . '</strong></p>'
//  );
//  $node->content['email'] = array(
//    '#markup' => '<p><strong>Example Email:</strong> ' . $mail . '</p>',
//    '#weight' => -9,
//  );
//  $node->content['plain_text'] = array(
//    '#markup' => '<p><strong>The plain text:</strong> ' . $commentaire . '</p>',
//    '#weight' => -8,
//  );
//}