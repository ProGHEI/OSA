<?php

include_once 'functions.php';
include_once 'forms.php';

/**
 * @file
 * This module provides a node type called 'Simple Content Type'
 */
/**
 * Fonction pour récupérer sous forme de tableau la date complète,
 * formatée correctement en FR, depuis un timestamp
 * indices 0 : jour en toute lettre, 1 : numéro du jour, 2 : mois, 3 : année
 * 
 * @date = timestamp
 */

/**
 * Implements hook_node_info().
 */
function osa_node_info() {
  // define our content type info
  $items['osa_affaire'] = array(
    'name' => t('Affaire'),
    'type' => 'osa_affaire',
    'base' => 'osa_affaire',
    'description' => t('Une nouvelle affaire à enregistrer'),
    'has_title' => '1',
    'title_label' => t('Affaire - Système OSA'),
    'has_body' => FALSE,
    'help' => t('Veuillez renseigner tous les champs.'),
    'locked' => TRUE,
  );
  $items['osa_client'] = array(
    'name' => t('Client'),
    'type' => 'osa_client',
    'base' => 'osa_client',
    'description' => t('Un nouveau client à enregistrer'),
    'has_title' => '1',
    'title_label' => t('Client - Système OSA'),
    'has_body' => FALSE,
    'help' => t('Veuillez renseigner tous les champs.'),
    'locked' => TRUE,
  );
  $items['osa_etudiant'] = array(
    'name' => t('Etudiant'),
    'type' => 'osa_etudiant',
    'base' => 'osa_etudiant',
    'description' => t('Un nouvel <strong>etudiant</strong> à enregistrer'),
    'has_title' => '1',
    'title_label' => t('Etudiant - Système OSA'),
    'has_body' => FALSE,
    'help' => t('Veuillez renseigner tous les champs.'),
    'locked' => TRUE,
  );
  $items['osa_document'] = array(
    'name' => t('Document'),
    'type' => 'osa_document',
    'base' => 'osa_document',
    'description' => t('Enregistrer un document à propos d\'une affaire'),
    'has_title' => '1',
    'title_label' => t('Document - Système OSA'),
    'has_body' => FALSE,
    'help' => t('Veuillez renseigner tous les champs.'),
    'locked' => TRUE,
  );


  return $items;
}

/**
 * Implements hook_node_validate().
 */
function osa_node_validate($node, $form, &$form_state) {
  // if we're not validating one of our own get out of here
  if ($node->type == "osa_affaire") {
    
  }
  elseif ($node->type == 'osa_client') {
    
  }
  elseif ($node->type == 'osa_etudiant') {
    
  }
  elseif ($node->type == 'osa_document') {
    
  }
  else {
    return;
  }
  // Check to see if email address is formatted correctly
//	if (isset($node->osa_textfield) && !valid_email_address($node->osa_textfield))  {
//		form_set_error('osa_textfield', t('Please enter a valid email address.'), NULL);
//	}
}

/**
 * Implement hook_node_insert()
 */
function osa_node_insert($node) {
  // if we're not inserting one of our own get out of here
  if ($node->type == 'osa_affaire') {
    global $user;
    $nid = $node->nid;
    $uid = $user->uid;

    // Passage des dates en TIMESTAMP pour ajout en BDD.
    // Pour cela, on instancie la classe DateTime en créant nos objets
    // dateDebut, Fin, PremierContact
    // On récupère ensuite une date correctement formaté à l'aide de l'array créé
    // par drupal. On applique à cet object la méthode getTimestamp pour retourner
    // ce qu'on l'on veut : un timestamp en bonne et due forme.


    $dateDebut = new DateTime;
    $dateFin = new DateTime;
    $datePremierContact = new DateTime;

    $dateDebut = date_date_set($dateDebut, $node->dateDebut['year'], $node->dateDebut['month'], $node->dateDebut['day']);
    $dateDebutTS = $dateDebut->getTimestamp();

    $dateFin = date_date_set($dateFin, $node->dateFin['year'], $node->dateFin['month'], $node->dateFin['day']);
    $dateFinTS = $dateFin->getTimestamp();

    $datePremierContact = date_date_set($datePremierContact, $node->datePremierContact['year'], $node->datePremierContact['month'], $node->datePremierContact['day']);
    $datePremierContactTS = $dateDebut->getTimestamp();


    $insert = db_insert('osa_affaire')
        ->fields(array(
          'nid' => $nid,
          'uid' => $uid,
          'idAffaire' => $node->idAffaire,
          'idClient' => $node->idClient,
          'idEtudiant' => $node->idEtudiant,
          'titreAffaire' => $node->titreAffaire,
          'recapitulatif' => $node->recapitulatif,
          'prixHT' => $node->prixHT,
          'tva' => $node->tva,
          'sommeFrais' => $node->sommeFrais,
          'nbJEH' => $node->nbJEH,
          'prixJEH' => $node->prixJEH,
          'pourcentPrevi' => $node->pourcentPrevi,
          'sommeHTPrevi' => $node->sommeHTPrevi,
          'accompte' => $node->accompte,
          'soldeFinal' => $node->soldeFinal,
          'dateDebut' => $dateDebutTS,
          'dateFin' => $dateFinTS,
          'datePremierContact' => $datePremierContactTS,
          'origine' => $node->origine,
          'chartreQualite' => $node->chartreQualite,
          'statutAffaire' => $node->statutAffaire,))
        ->execute();
  }
  elseif ($node->type == 'osa_client') {

    global $user;
    $nid = $node->nid;
    $uid = $user->uid;

    $insert = db_insert('osa_client')
        ->fields(array(
          'nid' => $nid,
          'uid' => $uid,
          'idClient' => $node->idClient,
          'nomClient' => $node->nomClient,
          'prenomClient' => $node->prenomClient,
          'fonction' => $node->fonction,
          'entreprise' => $node->entreprise,
          'numeroDeVoie' => $node->numeroDeVoie,
          'voie' => $node->voie,
          'codePostal' => $node->codePostal,
          'ville' => $node->ville,
          'mail' => $node->mail,
          'tel' => $node->tel,
          'commentaire' => $node->commentaire,
        ))
        ->execute();
  }
  elseif ($node->type == 'osa_etudiant') {
    global $user;
    $nid = $node->nid;
    $uid = $user->uid;

    $dateInscription = new DateTime;
    $dateCotisation = new DateTime;

    $dateInscription = date_date_set($dateInscription, $node->dateInscription['year'], $node->dateInscription['month'], $node->dateInscription['day']);
    $dateInscriptionTS = $dateInscription->getTimestamp();

    $dateCotisation = date_date_set($dateCotisation, $node->dateCotisation['year'], $node->dateCotisation['month'], $node->dateCotisation['day']);
    $dateCotisationTS = $dateCotisation->getTimestamp();

    $insert = db_insert('osa_etudiant')
        ->fields(array(
          'nid' => $nid,
          'uid' => $uid,
          'idEtudiant' => $node->idEtudiant,
          'nomEtudiant' => $node->nomEtudiant,
          'prenomEtudiant' => $node->prenomEtudiant,
          'insee' => $node->insee,
          'numeroDeVoie' => $node->numeroDeVoie,
          'voie' => $node->voie,
          'codePostal' => $node->codePostal,
          'ville' => $node->ville,
          'mail' => $node->mail,
          'tel' => $node->tel,
          'dateInscription' => $dateInscriptionTS,
          'dateCotisation' => $dateCotisationTS,
          'ficheAdhesionRemise' => $node->ficheAdhesionRemise,
          'ficheMembreActifRemise' => $node->ficheMembreActifRemise,
          'paiementCotisationEffectue' => $node->paiementCotisationEffectue,
          'certificatScolariteRemis' => $node->certificatScolariteRemis,
          'attestationSecuSocialeRemise' => $node->attestationSecuSocialeRemise,
          'photocopieCarteIdentiteRemise' => $node->photocopieCarteIdentiteRemise,
        ))
        ->execute();
  }
  elseif ($node->type == 'osa_document') {
    global $user;
    $nid = $node->nid;
    $uid = $user->uid;


    $dateSignature = new DateTime;
    $dateCommence = new DateTime;
    $dateTermine = new DateTime;
    $dateEnvoi = new DateTime;

    $dateSignature = date_date_set($dateSignature, $node->dateSignature['year'], $node->dateSignature['month'], $node->dateSignature['day']);
    $dateSignatureTS = $dateSignature->getTimestamp();

    $dateCommence = date_date_set($dateCommence, $node->dateCommence['year'], $node->dateCommence['month'], $node->dateCommence['day']);
    $dateCommenceTS = $dateCommence->getTimestamp();

    $dateTermine = date_date_set($dateTermine, $node->dateTermine['year'], $node->dateTermine['month'], $node->dateTermine['day']);
    $dateTermineTS = $dateTermine->getTimestamp();

    $dateEnvoi = date_date_set($dateEnvoi, $node->dateEnvoi['year'], $node->dateEnvoi['month'], $node->dateEnvoi['day']);
    $dateEnvoiTS = $dateEnvoi->getTimestamp();

    $insert = db_insert('osa_etudiant')
        ->fields(array(
          'nid' => $nid,
          'uid' => $uid,
//          'idDocument' => $node->idDocument,
          'idAffaire' => $node->idAffaire,
          'referenceDocument' => $node->referenceDocument,
          'etatDocument' => $node->etatDocument,
          'dateSignature' => $dateSignatureTS,
          'dateCommence' => $dateCommenceTS,
          'dateTermine' => $dateTermineTS,
          'dateEnvoi' => $dateEnvoiTS,
        ))
        ->execute();
  }
  else {
    return;
  }
}

/**
 * Implement hook_node_update()
 */
function osa_node_update($node) {
  // if we're not updating one of our own get out of here
  if ($node->type == "osa_affaire") {

    $dateDebut = new DateTime;
    $dateFin = new DateTime;
    $datePremierContact = new DateTime;

    $dateDebut = date_date_set($dateDebut, $node->dateDebut['year'], $node->dateDebut['month'], $node->dateDebut['day']);
    $dateDebutTS = $dateDebut->getTimestamp();

    $dateFin = date_date_set($dateFin, $node->dateFin['year'], $node->dateFin['month'], $node->dateFin['day']);
    $dateFinTS = $dateFin->getTimestamp();

    $datePremierContact = date_date_set($datePremierContact, $node->datePremierContact['year'], $node->datePremierContact['month'], $node->datePremierContact['day']);
    $datePremierContactTS = $dateDebut->getTimestamp();

    $update = db_update('osa_affaire')
        ->fields(array(
          'idAffaire' => $node->idAffaire,
          'idClient' => $node->idClient,
          'idEtudiant' => $node->idEtudiant,
          'titreAffaire' => $node->titreAffaire,
          'recapitulatif' => $node->recapitulatif,
          'prixHT' => $node->prixHT,
          'tva' => $node->tva,
          'sommeFrais' => $node->sommeFrais,
          'nbJEH' => $node->nbJEH,
          'prixJEH' => $node->prixJEH,
          'pourcentPrevi' => $node->pourcentPrevi,
          'sommeHTPrevi' => $node->sommeHTPrevi,
          'accompte' => $node->accompte,
          'soldeFinal' => $node->soldeFinal,
          'dateDebut' => $dateDebutTS,
          'dateFin' => $dateFinTS,
          'datePremierContact' => $datePremierContactTS,
          'origine' => $node->origine,
          'chartreQualite' => $node->chartreQualite,
          'statutAffaire' => $node->statutAffaire,))
        ->condition('nid', $node->nid, '=')
        ->execute();
  }
  elseif ($node->type == "osa_client") {
    $update = db_update('osa_client')
        ->fields(array(
          'idClient' => $node->idClient,
          'nomClient' => $node->nomClient,
          'prenomClient' => $node->prenomClient,
          'fonction' => $node->fonction,
          'entreprise' => $node->entreprise,
          'numeroDeVoie' => $node->numeroDeVoie,
          'voie' => $node->voie,
          'codePostal' => $node->codePostal,
          'ville' => $node->ville,
          'mail' => $node->mail,
          'tel' => $node->tel,
          'commentaire' => $node->commentaire,
        ))
        ->condition('nid', $node->nid, '=')
        ->execute();
  }
  elseif ($node->type == "osa_etudiant") {

    $dateInscription = new DateTime;
    $dateCotisation = new DateTime;

    $dateInscription = date_date_set($dateInscription, $node->dateInscription['year'], $node->dateInscription['month'], $node->dateInscription['day']);
    $dateInscriptionTS = $dateInscription->getTimestamp();

    $dateCotisation = date_date_set($dateCotisation, $node->dateCotisation['year'], $node->dateCotisation['month'], $node->dateCotisation['day']);
    $dateCotisationTS = $dateCotisation->getTimestamp();

    $update = db_update('osa_etudiant')
        ->fields(array(
          'idEtudiant' => $node->idClient,
          'nomEtudiant' => $node->nomClient,
          'prenomEtudiant' => $node->prenomClient,
          'insee' => $node->entreprise,
          'numeroDeVoie' => $node->numeroDeVoie,
          'voie' => $node->voie,
          'codePostal' => $node->codePostal,
          'ville' => $node->ville,
          'mail' => $node->mail,
          'tel' => $node->tel,
          'dateInscription' => $dateInscriptionTS,
          'dateCotisation' => $dateCotisationTS,
          'ficheAdhesionRemise' => $node->ficheAdhesionRemise,
          'ficheMembreActifRemise' => $node->ficheMembreActifRemise,
          'paiementCotisationEffectue' => $node->paiementCotisationEffectue,
          'certificatScolariteRemis' => $node->certificatScolariteRemis,
          'attestationSecuSocialeRemise' => $node->attestationSecuSocialeRemise,
          'photocopieCarteIdentiteRemise' => $node->photocopieCarteIdentiteRemise,
        ))
        ->condition('nid', $node->nid, '=')
        ->execute();
  }
  elseif ($node->type == "osa_document") {

    $dateSignature = new DateTime;
    $dateCommence = new DateTime;
    $dateTermine = new DateTime;
    $dateEnvoi = new DateTime;

    $dateSignature = date_date_set($dateSignature, $node->dateSignature['year'], $node->dateSignature['month'], $node->dateSignature['day']);
    $dateSignatureTS = $dateSignature->getTimestamp();

    $dateCommence = date_date_set($dateCommence, $node->dateCommence['year'], $node->dateCommence['month'], $node->dateCommence['day']);
    $dateCommenceTS = $dateCommence->getTimestamp();

    $dateTermine = date_date_set($dateTermine, $node->dateTermine['year'], $node->dateTermine['month'], $node->dateTermine['day']);
    $dateTermineTS = $dateTermine->getTimestamp();

    $dateEnvoi = date_date_set($dateEnvoi, $node->dateEnvoi['year'], $node->dateEnvoi['month'], $node->dateEnvoi['day']);
    $dateEnvoiTS = $dateEnvoi->getTimestamp();

    $update = db_update('osa_etudiant')
        ->fields(array(
//          'idDocument' => $node->idDocument,
          'idAffaire' => $node->idAffaire,
          'referenceDocument' => $node->referenceDocument,
          'etatDocument' => $node->etatDocument,
          'dateSignature' => $dateSignatureTS,
          'dateCommence' => $dateCommenceTS,
          'dateTermine' => $dateTermineTS,
          'dateEnvoi' => $dateEnvoiTS,
        ))
        ->condition('nid', $node->nid, '=')
        ->execute();
  }
}

/**
 * Implements hook_node_view().
 */
function osa_node_view($node, $view_mode, $langcode) {

  if (($node->type == 'osa_affaire')) {
    // get the data we want to display
    $data = db_select('osa_affaire', 'd')
        ->fields('d', array(
          'uid',
          'idAffaire',
          'idClient',
          'idEtudiant',
          'titreAffaire',
          'recapitulatif',
          'prixHT',
          'tva',
          'sommeFrais',
          'nbJEH',
          'prixJEH',
          'pourcentPrevi',
          'sommeHTPrevi',
          'accompte',
          'soldeFinal',
          'dateDebut',
          'dateFin',
          'datePremierContact',
          'origine',
          'chartreQualite',
          'statutAffaire',))
        ->condition("d.nid", $node->nid)
        ->execute()
        ->fetchAssoc();
    // fetch the user's name using {osa_data}.uid
    $user_name = db_select('users', 'u')
        ->fields('u', array('name'))
        ->condition("u.uid", $data['uid'])
        ->execute()
        ->fetchField();

    $idAffaire = $data['idAffaire'];
    $idClient = $data['idClient'];
    $idEtudiant = $data['idEtudiant'];
    $titreAffaire = $data['titreAffaire'];
    $recapitulatif = $data['recapitulatif'];
    $prixHT = $data['prixHT'];
    $tva = $data['tva'];
    $sommeFrais = $data['sommeFrais'];
    $nbJEH = $data['nbJEH'];
    $prixJEH = $data['prixJEH'];
    $pourcentPrevi = $data['pourcentPrevi'];
    $sommeHTPrevi = $data['sommeHTPrevi'];
    $accompte = $data['accompte'];
    $soldeFinal = $data['soldeFinal'];
    $dateDebut = $data['dateDebut'];
    $dateFin = $data['dateFin'];
    $datePremierContact = $data['datePremierContact'];
    $origine = $data['origine'];
    $chartreQualite = $data['chartreQualite'];
    $statutAffaire = $data['statutAffaire'];


    $dateDebutFormat = formatDateFR($dateDebut);
    $dateFinFormat = formatDateFR($dateFin);
    $datePremierContactFormat = formatDateFR($datePremierContact);

    // add what we want to the node content area
    $node->content['intro'] = array(
      '#markup' => '<p>This node was created by user ' . $user_name . '. Thanks for your contribution.</p>',
      '#weight' => -10,
    );
    $node->content['idAffaire'] = array(
      '#markup' => '<p><strong>ID de l\'affaire : ' . $idAffaire . '</strong></p>'
    );
    $node->content['email'] = array(
      '#markup' => '<p><strong>Example Email:</strong> ' . $idClient . '</p>',
      '#weight' => -9,
    );
    $node->content['plain_text'] = array(
      '#markup' => '<p><strong>The plain text:</strong> ' . $titreAffaire . '
                  avec pour date ' . $dateDebutFormat[0] . ' ' . $dateDebutFormat[1] . ' ' . $dateDebutFormat[2] . '</p>',
      '#weight' => -8,
    );
  }
  elseif ($node->type == 'osa_client') {
    $data = db_select('osa_client', 'c')
        ->fields('c', array(
          'uid',
          'idClient',
          'nomClient',
          'prenomClient',
          'fonction',
          'entreprise',
          'numeroDeVoie',
          'voie',
          'codePostal',
          'ville',
          'mail',
          'tel',
          'commentaire',))
        ->condition("c.nid", $node->nid)
        ->execute()
        ->fetchAssoc();
    // fetch the user's name using {osa_data}.uid
    $user_name = db_select('users', 'u')
        ->fields('u', array('name'))
        ->condition("u.uid", $data['uid'])
        ->execute()
        ->fetchField();

    $idClient = $data['idClient'];
    $nomClient = $data['nomClient'];
    $prenomClient = $data['prenomClient'];
    $fonction = $data['fonction'];
    $entreprise = $data['entreprise'];
    $numeroDeVoie = $data['numeroDeVoie'];
    $voie = $data['voie'];
    $codePostal = $data['codePostal'];
    $ville = $data['ville'];
    $mail = $data['mail'];
    $tel = $data['tel'];
    $commentaire = $data['commentaire'];

    // add what we want to the node content area
    $node->content['intro'] = array(
      '#markup' => '<p>This node was created by user ' . $user_name . ' pour le client ' . $idClient .
      ', de l\'entreprise ' . $entreprise . '</p>',
      '#weight' => -10,
    );
    $node->content['idAffaire'] = array(
      '#markup' => '<p><strong>Contact : ' . $nomClient . ' ' . $prenomClient . '</strong></p>'
    );
    $node->content['email'] = array(
      '#markup' => '<p><strong>Example Email:</strong> ' . $mail . '</p>',
      '#weight' => -9,
    );
    $node->content['plain_text'] = array(
      '#markup' => '<p><strong>The plain text:</strong> ' . $commentaire . '</p>',
      '#weight' => -8,
    );
  }
  elseif ($node->type == 'osa_etudiant') {
    $data = db_select('osa_etudiant', 'c')
        ->fields('c', array(
          'uid',
          'idEtudiant',
          'nomEtudiant',
          'prenomEtudiant',
          'insee',
          'numeroDeVoie',
          'voie',
          'codePostal',
          'ville',
          'mail',
          'tel',
          'dateInscription',
          'dateCotisation',
          'ficheAdhesionRemise',
          'ficheMembreActifRemise',
          'paiementCotisationEffectue',
          'certificatScolariteRemis',
          'attestationSecuSocialeRemise',
          'photocopieCarteIdentiteRemise',))
        ->condition("c.nid", $node->nid)
        ->execute()
        ->fetchAssoc();
    // fetch the user's name using {osa_data}.uid
    $user_name = db_select('users', 'u')
        ->fields('u', array('name'))
        ->condition("u.uid", $data['uid'])
        ->execute()
        ->fetchField();

    $idEtudiant = $data['idEtudiant'];
    $nomEtudiant = $data['nomEtudiant'];
    $prenomEtudiant = $data['prenomEtudiant'];
    $insee = $data['insee'];
    $numeroDeVoie = $data['numeroDeVoie'];
    $voie = $data['voie'];
    $codePostal = $data['codePostal'];
    $ville = $data['ville'];
    $mail = $data['mail'];
    $tel = $data['tel'];
    $dateInscription = $data['dateInscription'];
    $dateCotisation = $data['dateCotisation'];
    $ficheAdhesionRemise = $data['ficheAdhesionRemise'];
    $ficheMembreActifRemise = $data['ficheMembreActifRemise'];
    $paiementCotisationEffectue = $data['paiementCotisationEffectue'];
    $certificatScolariteRemis = $data['certificatScolariteRemis'];
    $attestationSecuSocialeRemise = $data['attestationSecuSocialeRemise'];
    $photocopieCarteIdentiteRemise = $data['photocopieCarteIdentiteRemise'];


    $dateInscriptionFormat = formatDateFR($dateInscription);
    // add what we want to the node content area
    $node->content['intro'] = array(
      '#markup' => '<p>This node was created by user ' . $user_name . ' pour le client ' . $idEtudiant . '</p>',
      '#weight' => -10,
    );
    $node->content['idAffaire'] = array(
      '#markup' => '<p><strong>Contact : ' . $nomEtudiant . ' ' . $prenomEtudiant . '</strong></p>'
    );
    $node->content['email'] = array(
      '#markup' => '<p><strong>Example Email:</strong> ' . $mail . '</p>',
      '#weight' => -9,
    );
    $node->content['plain_text'] = array(
      '#markup' => '<p><strong>The plain text:</strong> ' . $ficheAdhesionRemise . ' ' . $ficheMembreActifRemise . ' 
                  avec pour date ' . $dateInscriptionFormat[0] . ' ' . $dateInscriptionFormat[1] . ' ' . $dateInscriptionFormat[2] . '</p>',
      '#weight' => -8,
    );
  }
  elseif ($node->type == 'osa_document') {
    $data = db_select('osa_document', 'c')
        ->fields('c', array(
          'uid',
          'idDocument',
          'idAffaire',
          'referenceDocument',
          'etatDocument',
          'dateSignature',
          'dateCommence',
          'dateTermine',
          'dateEnvoi',))
        ->condition("c.nid", $node->nid)
        ->execute()
        ->fetchAssoc();
    // fetch the user's name using {osa_data}.uid
    $user_name = db_select('users', 'u')
        ->fields('u', array('name'))
        ->condition("u.uid", $data['uid'])
        ->execute()
        ->fetchField();

    $idDocument = $data['idDocument'];
    $idAffaire = $data['idAffaire'];
    $referenceDocument = $data['referenceDocument'];
    $etatDocument = $data['etatDocument'];
    $dateSignature = $data['dateSignature'];
    $dateCommence = $data['dateCommence'];
    $dateTermine = $data['dateTermine'];
    $dateEnvoi = $data['dateEnvoi'];


    $dateInscriptionFormat = formatDateFR($dateInscription);
    // add what we want to the node content area
    $node->content['intro'] = array( 
     '#markup' => '<p>This node was created by user ' . $user_name . ' pour le document ' . $idDocument . ' affaire ' . $idAffaire . '</p>',
      '#weight' => -10,
    );
    $node->content['email'] = array(
      '#markup' => '<p><strong>Example Email:</strong> ' . $etatDocument . '</p>',
      '#weight' => -9,
    );
    
  }
  else {
    return;
  }
}