<?php

/**
 * @file
 * Tests for the OSA module
 */

class OSATestCase extends DrupalWebTestCase{
  public static function getInfo(){
    return array(
      'name' => 'osa module functionality',
      'description' => 'Tests hooks in the osa module',
      'group' => 'osa',
    ); 
  }
  
   public function setUp(){
    parent::setUp('osa');
  }
  
  public function testPermission(){
    $data = module_invoke('osa', 'permission');

    $this->assertTrue(is_array($data), t('Permission hook returns array.'));
    
    $this->assertTrue(array_key_exists('access osa content', $data),
    t('Permission is as expected.'));
  }
  
  public function testMenu(){
    $items = module_invoke('osa', 'menu');
    
    $this->assertEqual(2, count($items), t('Two items in menu.'));
    
    $this->assertIdentical($items['admin/config/content/osa']['title'], $items['osa']['title'], t('Titles are identical.'));
  }
  
  public function testBlockView(){
    $data = module_invoke('osa', 'block_view', 'osa');
        
    $this->assertEqual(t('Outil Suivi d\'Affaires'), $data['subject'], t('Subject is as expected.'));
    
    $this->assertNotNull($data['content'], t('Block contains data.'));
  }
  
   public function testBlockInfo(){
    $info = module_invoke('osa', 'block_info');
    
    $this->assertNotEqual('DRUPAL_CACHE_PER_USER', $info['osa']['cache'],
    t('Cache is not set to DRUPAL_CACHE_PER_USER'));
    
    $this->assertFalse(count($info) > 1, t('No more than one block defined.'));
  }
  
  public function testBlock(){
    $info = module_invoke('osa', 'block_info');
    $data = module_invoke('osa', 'block_view', 'osa');
      
    $this->assertIdentical($info['osa']['info'], $data['subject'], t('Block list 
    name and subject are identical.'));
  }
}